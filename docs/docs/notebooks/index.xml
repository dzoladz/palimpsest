<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notebooks on Palimpsest</title>
    <link>//localhost:1313///palimpsest/docs/notebooks/</link>
    <description>Recent content in Notebooks on Palimpsest</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="//localhost:1313///palimpsest/docs/notebooks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>//localhost:1313///palimpsest/docs/notebooks/ambiance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/ambiance/</guid>
      <description>&amp;mdash; title: &amp;ldquo;Ambiance&amp;rdquo; description: &amp;gt; Sound generators for ambient coding environments &amp;mdash;&#xA;musicForProgramming myNoise noisesOnline Experiment in Time Polyrhythmic Music for Focus and Studying </description>
    </item>
    <item>
      <title>Authentication</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/authentication/</guid>
      <description> OpenID ISNI&#xA;ISNI (International Standard Name Identifier) is an ISO standard, in use by numerous libraries, publishers, databases, and rights management organizations around the world. It is used to uniquely identify persons and organizations involved in creative activities, as well as public personas of both, such as pseudonyms, stage names, record labels or publishing imprints </description>
    </item>
    <item>
      <title>Business Apps</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/business_apps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/business_apps/</guid>
      <description>Sales Invoice Ninja Odoo Project Management Orangescrum Taiga Tuleap Security - Social Engineering GoPhish Infrastructure and Application Monitoring Prometheus Monit Cockpit Glances Grafana graylog Password Management Bitwarden Website Frameworks and Publishing Platforms Hugo ghost Identity Management &amp;amp; Directory Services Keycloak OpenLDAP Gluu Office Productivity LibreOffice File Sync and Share Nextcloud Pydio OwnCloud Messaging Platforms Mattermost </description>
    </item>
    <item>
      <title>Cables</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/cables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/cables/</guid>
      <description> The Cable Bibles </description>
    </item>
    <item>
      <title>Certbot</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/certbot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/certbot/</guid>
      <description>Certbot certbot for Let&amp;rsquo;s Encrypt with code on GitHub&#xA;Common Commands certbot user guide&#xA;certbot renew Attempt to renew all certificates certbot certificates List all certificates certbot delete --cert-name domaintoremove.com Delete a certificate </description>
    </item>
    <item>
      <title>Diagramming Tool</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/diagramming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/diagramming/</guid>
      <description> Graphviz Docs Graphviz Attribute Reference Web-based Visual Editor Diagrams </description>
    </item>
    <item>
      <title>Docker</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/docker/</guid>
      <description>Warning These notes are likely stale Basic Info don&amp;rsquo;t run docker commands as root sudo usermod -aG docker callimachus Docker Hub Docker Compose Reference: Docker Commands docker info docker inspect docker exec -it docker run -d docker ps -a docker stop [my_container] docker rm [my_container] docker rmi [docker_image] docker volume rm [my_volume] docker volume create [my_volume] docker volume ls docker volume inspect [my_volume] docker container ls -aq # list all containers docker network ls # list them all docker network prune -a # get rid of them all Tags nginx # default to latest</description>
    </item>
    <item>
      <title>Email</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/email/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/email/</guid>
      <description>Top-Notch Resources Demystifying DMARC - Sean Whalen Email Authentication SPF (Sender Policy Framework) - List of authorized mail sources DKIM (DomainKeys Identified Mail ) - Mail signature Email sending server signs message with private key Email domain publishes public key in DNS Mail recipient server checks signature of mail against published DKIM values DMARC (Domain-based Message Authentication, Reporting and Conformance) RUA (Aggregate) RUF (Forensic) p= (Policy to Apply) max 2 recipients </description>
    </item>
    <item>
      <title>EZproxy</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/ezproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/ezproxy/</guid>
      <description>A snippet of fragments useful for administering EZproxy&#xA;Reject connections that originate from IPs outside of Ohio region. Region codes should be specified using the two-character ISO 3166-2 subcountry code for the US.&#xA;GeoLite data must also be configured on EZproxy (see the Location section of the EZproxy manual).&#xA;::Common Set access = &amp;#34;deny&amp;#34;; If Region() eq &amp;#34;OH&amp;#34;; Set access = &amp;#34;allow&amp;#34; If access eq &amp;#34;deny&amp;#34;; Deny irefused.htm /Common Regex for use in the main authentication block.</description>
    </item>
    <item>
      <title>Geospatial</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/geospatial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/geospatial/</guid>
      <description>Types of Geospatial Data Raster data - Suitable for continuous information without fixed borders, represented as a grid of cells with values indicating observed features. It is often monitored at regular intervals and interpolated to create a continuous surface.&#xA;Vector data - Uses points, lines, and polygons to represent spatial properties, including points of interest, transportation networks, administrative boundaries, and land parcels, often used for discrete data with precise positions or hard constraints.</description>
    </item>
    <item>
      <title>Git</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/git/</guid>
      <description>Configuration git config git config --global user.name &amp;#34;derekz&amp;#34; git config --global user.email derekz@derekzoladz.com # Remember my creds for 15 minutes git config credential.helper cache # Store my creds in a plain-text .git-credentials file git config --global credential.helper store Clone # Clone a Repository and history git clone https://github.com/dzoladz/dzoladz.git # Clone &amp;amp; Rename to &amp;#39;website&amp;#39; git clone https://github.com/dzoladz/dzoladz.git website # Clone a branch, &amp;lt;branch&amp;gt; &amp;lt;remote repo&amp;gt; git clone -b collab/berick/ansible-installer-ubuntu-16.04 git://git.evergreen-ils.org/working/random.git Basics Initialize Git Repository mkdir repo_name cd repo_name git init Remotes # Add initial remote named &amp;#39;origin&amp;#39; git remote add origin https://github.</description>
    </item>
    <item>
      <title>GPG</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/gpg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/gpg/</guid>
      <description>Get gpg command brew install gnupg Generate GPG key gpg --full-generate-key List GPG keys for derek@derekzoladz.com gpg --list-secret-keys --keyid-format LONG derek@derekzoladz.com Copy the GPG key ID that starts with sec. In the following example, 488652B776349D07: sec rsa4096/488652B776349D07 2019-12-14 [SC] 8AAF3B17369BFB6A36171FFA76349D07488652B7 uid [ultimate] Derek Zoladz (None) &amp;lt;derek@derekzoladz.com&amp;gt; ssb rsa4096/8A3A7957EECFC9AA 2019-12-14 [E] Export the public key of that ID gpg --armor --export 488652B776349D07 Copy the public GPG key and it to both GitLab and GitHub accounts</description>
    </item>
    <item>
      <title>Homebrew</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/homebrew/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/homebrew/</guid>
      <description>Get it! /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; COMMAND CHEAT SHEET Globals brew update&#x9;update packages brew list --versions&#x9;show installed packages brew cask list --versions&#x9;show installed casks brew doctor check system for potential problems brew help print help info Packages brew install hugo&#x9;install package brew uninstall hugo&#x9;uninstall package brew cask install atom&#x9;install cask atom brew upgrade hugo&#x9;upgrade a package brew switch hugo 0.5.3 switch package to specific version brew info hugo&#x9;list versions, caveats brew cleanup hugo&#x9;remove old versions brew edit hugo&#x9;edit formula brew cat hugo&#x9;print formula brew home hugo&#x9;open project homepage brew pin hugo prevent the specified formulae from being upgraded brew unpin hugo unpin package and allow upgrades Repos brew search hugo search repos based on the substring text.</description>
    </item>
    <item>
      <title>JavaScript</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/javascript/</guid>
      <description> ECMAScript 2023, Language Specification CanIUse browser support of front-end web technologies General Tools Vue.js - framework for building web user interfaces Vite - build tooling Create-Vue - the recommended way to start a Vite-powered Vue project Axios - promise-based HTTP client </description>
    </item>
    <item>
      <title>JS Forms</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/js_forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/js_forms/</guid>
      <description>EBSCO Article Search &amp;lt;form action=&amp;#34;javascript:submitArticleDatabasesSearch();&amp;#34;&amp;gt; &amp;lt;label for=&amp;#34;searchbox&amp;#34;&amp;gt;Search for:&amp;lt;/label&amp;gt; &amp;lt;input name=&amp;#34;article_searchbox&amp;#34; type=&amp;#34;text&amp;#34; placeholder=&amp;#34;Enter Keywords&amp;#34;&amp;gt; &amp;lt;span class=&amp;#34;search-in&amp;#34;&amp;gt; &amp;lt;label for=&amp;#34;database&amp;#34; class=&amp;#34;libdata in&amp;#34;&amp;gt;in&amp;lt;/label&amp;gt; &amp;lt;select name=&amp;#34;database&amp;#34;&amp;gt; &amp;lt;option disabled=&amp;#34;disabled&amp;#34; value=&amp;#34;&amp;#34;&amp;gt;Choose a Database&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;a9h&amp;#34;&amp;gt;Academic Search Complete&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;jstor&amp;#34;&amp;gt;JSTOR&amp;lt;/option&amp;gt; &amp;lt;/select&amp;gt; &amp;lt;/span&amp;gt; &amp;lt;input name=&amp;#34;article_search_submit&amp;#34; type=&amp;#34;submit&amp;#34; value=&amp;#34;Search&amp;#34;&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;script&amp;gt; function submitArticleDatabasesSearch() { const proxyPrefix = &amp;#34;https://YOUREZPROXYDOMAINHERE/login?url=&amp;#34;; var selected = document.getElementsByName(&amp;#39;database&amp;#39;)[0].value; var terms = document.getElementsByName(&amp;#39;article_searchbox&amp;#39;)[0].value; if (selected != &amp;#34;&amp;#34;) { console.log(&amp;#34;Okay&amp;#34;); if (selected == &amp;#34;a9h&amp;#34;) { console.log(&amp;#34;User selected: &amp;#34; + selected); const ebscoPrefix = &amp;#34;https://search.</description>
    </item>
    <item>
      <title>Mailman</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/mailman/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/mailman/</guid>
      <description>Mailman Operator Binaries Remove an email address from all lists on the server remove_members --fromall --nouserack username@domain.edu&#xA;Add a single user to a list echo &#39;username@domain.edu&#39; | add_members -r - listname&#xA;List Membership list_members listname&#xA;Export Member List for Migration list_members --fullnames -o membership.txt listname&#xA;List All Mailing Lists list_lists&#xA;Find a Member in All Lists find_member username@domain.edu&#xA;Migration Tasks Mailman provides a few scripts to assist with migration tasks. Check out those scripts to see if something is already available for a specific task before using the one-liners below.</description>
    </item>
    <item>
      <title>Monit</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/monit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/monit/</guid>
      <description>website&#xA;configuration examples&#xA;Setup Notes You&amp;rsquo;ll need to ensure that the standard mailutils are installed on the server.&#xA;apt-get install postfix mailutils Afterwards, modify the /etc/monit/monitrc file by uncommenting the following lines to enable emailed notifications&#xA;set mailserver localhost #Use localhost for email delivery. set mail-format { from: monit@$HOST subject: monit alert -- $EVENT $SERVICE message: $EVENT Service $SERVICE Date: $DATE Action: $ACTION Host: $HOST Description: $DESCRIPTION } set alert derekz@example.</description>
    </item>
    <item>
      <title>networker</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/networker_commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/networker_commands/</guid>
      <description>Warning Moved to Commvault Service Daemon is nsrexecd&#xA;service networker stop service networker start Logging Logging for previous versions of Networker configured logs to /nsr/logs/daemon.raw&#xA;Enter Administrative Shell of Networker nsradmin -p nsrexec Render .log from .raw cd /nsr/logs/ nsr_render_log -mepathy daemon.raw &amp;gt; daemon.log View most recent 25 entries in log tail -n 25 daemon.log View logging configuration From nsradmin shell:&#xA;print type: NSR log Update Runtime Loggging Location update runtime rendered log:/nsr/logs/daemon.</description>
    </item>
    <item>
      <title>Perlbrew</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/perlbrew/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/perlbrew/</guid>
      <description> Get it curl -L https://install.perlbrew.pl | bash Add perlbrew to your PATH COMMAND CHEAT SHEET Initialize perlbrew init Get Crack&amp;rsquo;n perlbrew available perlbrew install 5.30.0 perlbrew list perlbrew switch 5.30.0 &amp;gt; set as default Turn it off completely. Useful when you messed up too deep. -perlbrew off&#xA;Install cpanm | a script to get, unpack, build and install modules from CPAN.&#xA;perlbrew install-cpanm cpanm Module::Name </description>
    </item>
    <item>
      <title>PHP</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/php/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/php/</guid>
      <description> PHP 8.2 Manual Packagist - PHP Package Repository PHP, the right way PHP, framework interop group </description>
    </item>
    <item>
      <title>Postfix</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/postfix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/postfix/</guid>
      <description>Blacklist &amp;amp; Whitelist with Postfix 1. Create a file of IPs to blacklist - Postfix Reference Create a reject.cidr file in /etc/postfix. To it, add one or more problematic IPs or ranges from your logwatch reports, mail logs, email headers, etc.:&#xA;192.168.1.1 OK 192.168.0.0/16&#x9;REJECT 2001:db8::1&#x9;OK 2001:db8::/32&#x9;REJECT FROM THE DOCS - Rule order matters! Place specific whitelist entries before general blacklist entries.&#xA;2. Hash the reject.cidr file - Postfix Reference The reject.</description>
    </item>
    <item>
      <title>Python4Lib</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/python4lib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/python4lib/</guid>
      <description>Records https://github.com/kennethreitz/records Okay if you just want some tabular data in a single sheet OpenPyxl https://openpyxl.readthedocs.io/en/stable/ Manipulating xls, xlsx files XMLtoDict https://github.com/martinblech/xmltodict Paramiko http://docs.paramiko.org/en/2.4/api/sftp.html ftputil https://pypi.org/project/ftputil/ PyMarc https://github.com/edsu/pymarc pybibframe https://pypi.org/project/pybibframe/ CSV https://docs.python.org/3/library/csv.html Built in JSON https://docs.python.org/3/library/json.html Working With JSON Data in Python PyYAML https://pyyaml.org/wiki/PyYAMLDocumentation Psycops2 https://pypi.org/project/psycopg2/ PostgreSQL adaptor Shutil https://docs.python.org/3/library/shutil.html Shell util Fuzzy Wuzzy https://github.com/seatgeek/fuzzywuzzy pikepff https://github.com/pikepdf/pikepdf csvkit https://github.com/wireservice/csvkit </description>
    </item>
    <item>
      <title>React.js</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/react/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/react/</guid>
      <description>Some initial notes during the exploration of React.js JavaScript library.&#xA;Draft Everything on this page is in draft-mode. Expect errors, amendments, oversights, and corrections.&#xA;Quick Start Facebook&amp;rsquo;s create-react-app MDN web docs - JavaScript Compatibility checks with browser via Babel Reusable components! bit CONTENTdm Documentation CONTENTdm provides JavaScript Customization Docs to facilitate a general understanding of the React-based CONTENTdm application.&#xA;CSS Classes CSS Classes are broken down into the following classifications:</description>
    </item>
    <item>
      <title>Samba</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/samba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/samba/</guid>
      <description>STEP 1 ## -------------------------- ## Set up Storage Block Disk ## -------------------------- # list block devices lsblk # Delete partitions and reboot sfdisk --delete /dev/sda # Write Files system mkfs.ext4 -j -L SambaStorage /dev/sda # List block ids blkid # update file system table vim /etc/fstab # mount all volumes in fs table mount -a # reboot reboot STEP 2 ## ------------------------- ## Install Samba ## ------------------------- # Install Samba apt-get install samba STEP 3 Update Samba Configuration to listen only to local network /etc/samba/smb.</description>
    </item>
    <item>
      <title>SIP2</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/sip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/sip/</guid>
      <description> NISO SIP 3M SIP2 Protocol pysip2-client Connect telnet cool-cat.org 6001 Format to pass credentials 9300CN&amp;lt;username&amp;gt;|CO&amp;lt;password&amp;gt;|CP&amp;lt;institutionid&amp;gt; 9300CNdz1|CO&amp;lt;password&amp;gt;|CPCOOL connection responses&#xA;941 # success 940 # failed Patron information request 6300320170218 201700 AO&amp;lt;institutionid&amp;gt;|AA&amp;lt;patronbarcode&amp;gt; </description>
    </item>
    <item>
      <title>Yaz</title>
      <link>//localhost:1313///palimpsest/docs/notebooks/yaz/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313///palimpsest/docs/notebooks/yaz/</guid>
      <description>Install Homebrew&#xA;/usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; Install Yaz&#xA;brew install yaz Read the YAZ Docs, find a z39.50 target, review bib-1 attribute set, and give it a whirl.&#xA;# start Yaz connection to Library of Congress z39.50 # z39.50 server is running on port 7090, via voyager yaz-client z3950.loc.gov:7090/voyager # open the connection for searching open z3950.loc.gov:7090/voyager # Send a boolean query find @and cats hot # Use Bib-1 Attributes (find &amp;#34;&amp;#34; in 245) find @attr 1=4 &amp;#34;rocco di pietro&amp;#34; # Use Bib-1 Attributes to search ISBN find @attr 1=7 &amp;#34;9780674015432&amp;#34; # Return one record s 1 # Change record format format xml format marc21 # Display client settings list_all # capture records in file set_marcdump /Users/Derek/Desktop/download.</description>
    </item>
  </channel>
</rss>
